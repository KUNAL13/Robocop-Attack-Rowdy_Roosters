{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"las",
				"lastRole"
			],
			[
				"sam",
				"sample_player"
			],
			[
				"passt",
				"passTime"
			],
			[
				"p",
				"pass_point"
			],
			[
				"re",
				"receiver_"
			],
			[
				"Pass",
				"PassMessage"
			],
			[
				"te",
				"tellMe"
			],
			[
				"rece",
				"receiver_"
			],
			[
				"r",
				"receiver_"
			],
			[
				"aido",
				"audio_memory"
			],
			[
				"pass",
				"pass_point"
			],
			[
				"team",
				"teammate"
			],
			[
				"op",
				"opponent"
			],
			[
				"opp",
				"opponent"
			],
			[
				"do",
				"double"
			],
			[
				"passte",
				"passTaker"
			],
			[
				"v",
				"vel"
			],
			[
				"ki",
				"kicked"
			],
			[
				"d",
				"dribbler"
			],
			[
				"take",
				"takePass"
			],
			[
				"pas",
				"passReceiver"
			],
			[
				"SampleP",
				"SamplePlayer"
			],
			[
				"tar",
				"target_point"
			],
			[
				"sel",
				"self_point"
			],
			[
				"ta",
				"target_point"
			],
			[
				"Player",
				"PlayerObject"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/usr/local/include/rcsc/common/audio_memory.h",
			"settings":
			{
				"buffer_size": 22716,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/local/include/rcsc/player/world_model.h",
			"settings":
			{
				"buffer_size": 48607,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sample_player.cpp",
			"settings":
			{
				"buffer_size": 49132,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "// -*-c++-*-\n\n/*\n *Copyright:\n\n Copyright (C) Hidehisa AKIYAMA\n\n This code is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 3, or (at your option)\n any later version.\n\n This code is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this code; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n\n *EndCopyright:\n */\n\n/////////////////////////////////////////////////////////////////////\n\n#ifndef SAMPLE_PLAYER_H\n#define SAMPLE_PLAYER_H\n\n#include \"action_generator.h\"\n#include \"field_evaluator.h\"\n#include \"communication.h\"\n\n#include <rcsc/player/player_agent.h>\n#include <rcsc/geom/vector_2d.h>\n#include <rcsc/player/soccer_action.h>\n#include <vector>\n #include \"bhv_basic_offensive_kick.h\"\n#include \"strategy.h\"\n\n#include \"bhv_basic_tackle.h\"\n\n#include <rcsc/action/basic_actions.h>\n#include <rcsc/action/body_go_to_point.h>\n#include <rcsc/action/body_intercept.h>\n#include <rcsc/action/neck_turn_to_ball_or_scan.h>\n#include <rcsc/action/neck_turn_to_low_conf_teammate.h>\n\n#include <rcsc/player/player_agent.h>\n#include <rcsc/player/debug_client.h>\n#include <rcsc/player/intercept_table.h>\n\n#include <rcsc/common/logger.h>\n#include <rcsc/common/server_param.h>\n\n#include \"neck_offensive_intercept_neck.h\"\n\n#include <string>\n#include <vector>\n\nclass SamplePlayer\n    : public rcsc::PlayerAgent {\nprivate:\n\n    Communication::Ptr M_communication;\n\n    FieldEvaluator::ConstPtr M_field_evaluator;\n    ActionGenerator::ConstPtr M_action_generator;\n\npublic:\n\n    SamplePlayer();\n\n    virtual\n    ~SamplePlayer();\n\nprotected:\n\n    /*!\n      You can override this method.\n      But you must call PlayerAgent::initImpl() in this method.\n    */\n    virtual\n    bool initImpl( rcsc::CmdLineParser & cmd_parser );\n\n    //! main decision\n    virtual\n    void actionImpl();\n\n    //! communication decision\n    virtual\n    void communicationImpl();\n\n    virtual\n    void handleActionStart();\n    virtual\n    void handleActionEnd();\n\n    virtual\n    void handleServerParam();\n    virtual\n    void handlePlayerParam();\n    virtual\n    void handlePlayerType();\n\n    virtual\n    FieldEvaluator::ConstPtr createFieldEvaluator() const;\n\n    virtual\n    ActionGenerator::ConstPtr createActionGenerator() const;\n\npublic:\n\n    bool mpIntransit;\n    rcsc::Vector2D mpTarget;\n    bool IsOccupying;\n    rcsc::Vector2D PrevOccupied;\n\n    bool Opponenthasball;\n\n    std::string lastRole;\n    \n    int\n    LastBH;\n\n    bool\n    FoundNewBH;\n\n\n    bool \n    executeSampleRole( rcsc::PlayerAgent * agent );\n\n    bool\n    PlacePlayers(rcsc::PlayerAgent * agent);\n\n    bool\n    BasicMove( rcsc::PlayerAgent * agent );\n\n    bool \n    isKickable(rcsc::PlayerAgent * agent, int unum);\n\n    int \n    GetBHUnum(rcsc::PlayerAgent * agent);\n\n    double \n    abs(double d);\n\n    std::vector < rcsc::Vector2D > calculatePlacementThreat();\n\n    rcsc::Vector2D \n    calculate_placement_threat(rcsc::PlayerAgent * agent, rcsc::Vector2D P);\n\n    rcsc::Vector2D \n    RoundToNearestTens(rcsc::Vector2D P);\n    \n    int\n    ClosestPlayerToBall(rcsc::PlayerAgent * agent);\n\n    bool \n    isRTaHole(rcsc::Vector2D P);\n\n    rcsc::Vector2D \n    RoundToNearestHole(rcsc::Vector2D P);\n\n    bool\n    AreSamePoints(rcsc::Vector2D A, rcsc::Vector2D B, double buffer);\n\n    bool\n    IsOccupied(rcsc::PlayerAgent * agent, rcsc::Vector2D target, double buffer);\n\n    bool\n    IsOccupiedWhileDashing(rcsc::PlayerAgent * agent, rcsc::Vector2D target, double buffer);\n\n    int\n    IsOccupiedForPassing(rcsc::PlayerAgent * agent, rcsc::Vector2D target, double buffer);\n\n\n    int\n    GetOccupierUnum(rcsc::PlayerAgent * agent, rcsc::Vector2D target, double buffer);\n\n    bool\n    PassToBestPlayer(rcsc::PlayerAgent * agent);\n\n    bool\n    PassToPlayer( rcsc::PlayerAgent * agent, rcsc::Vector2D target_point, int receiver );\n\n    bool\n    DecideAndOccupyHole(rcsc::PlayerAgent * agent, int target);\n\n    void\n    OccupyHole(rcsc::Vector2D target);\n\n    bool\n    PassPlayersAvailable(rcsc::PlayerAgent * agent);\n\n    bool\n    AreSameNos(double A, double B, double buffer);\n\n    bool\n    IsSectorEmpty(rcsc::PlayerAgent * agent, rcsc::Vector2D target, double buf_degree);\n\n    bool\n    SampleDribble(rcsc::PlayerAgent * agent);\n\n\n    bool\n    ManMark( rcsc::PlayerAgent * agent );\n\n    bool\n    ManMark2( rcsc::PlayerAgent * agent );\n    \n    bool \n    sendCentreBack( rcsc::PlayerAgent * agent );\n\n    bool\n    executeDefense( rcsc::PlayerAgent * agent );\n    \n\nprivate:\n    double getDashPower( const rcsc::PlayerAgent * agent );\n    void doKick( rcsc::PlayerAgent * agent );\n    void doMove( rcsc::PlayerAgent * agent );\n    bool doPreprocess();\n    bool doShoot();\n    bool doForceKick();\n    bool doHeardPassReceive();\n\npublic:\n    virtual\n    FieldEvaluator::ConstPtr getFieldEvaluator() const;\n};\n\n#endif\n",
			"file": "sample_player.h",
			"file_size": 5169,
			"file_write_time": 130577077665177974,
			"settings":
			{
				"buffer_size": 5177,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/local/include/rcsc/player/say_message_builder.h",
			"settings":
			{
				"buffer_size": 38641,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/local/include/rcsc/player/action_effector.h",
			"settings":
			{
				"buffer_size": 18036,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/local/include/rcsc/player/player_agent.h",
			"settings":
			{
				"buffer_size": 13795,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/local/include/rcsc/game_time.h",
			"settings":
			{
				"buffer_size": 6361,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/local/include/rcsc/action/body_smart_kick.h",
			"settings":
			{
				"buffer_size": 2514,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/anuj/Desktop/robocup-share/robocup-share/attack/src"
	],
	"file_history":
	[
		"/usr/share/themes/QtCurve/gtk-2.0/gtkrc",
		"/usr/local/include/rcsc/player/free_message.h",
		"/usr/local/include/rcsc/player/abstract_player_object.h",
		"/usr/local/include/rcsc/player/world_model.h",
		"/home/anuj/Desktop/robocup-share/robocup-share/attack/src/sample_player.cpp",
		"/usr/local/include/rcsc/common/say_message_parser.h",
		"/usr/local/include/rcsc/player/say_message_builder.h",
		"/home/anuj/Desktop/robocup-share/robocup-share/attack/src/chain_action/actgen_cross.cpp",
		"/usr/local/include/rcsc/player/player_command.h",
		"/usr/local/include/rcsc/player/debug_client.h",
		"/usr/local/include/rcsc/action/body_hold_ball2008.h",
		"/usr/local/include/rcsc/action/body_hold_ball.h",
		"/usr/local/include/rcsc/action/arm_off.h",
		"/usr/local/include/rcsc/common/basic_client.h",
		"/usr/local/include/rcsc/common/audio_message.h",
		"/usr/local/include/rcsc/action/body_go_to_point2010.h",
		"/usr/local/include/rcsc/action/body_go_to_point.h",
		"/usr/local/include/rcsc/action/bhv_shoot2008.h",
		"/usr/local/include/rcsc/action/shoot_table2008.h",
		"/usr/local/include/rcsc/action/bhv_shoot.h",
		"/usr/local/include/rcsc/action/bhv_body_neck_to_ball.h",
		"/usr/local/include/rcsc/action/body_kick_to_relative.h",
		"/usr/local/include/rcsc/action/body_kick_one_step.h",
		"/home/anuj/Desktop/robocup-share/robocup-share/attack/src/formations-dt/before-kick-off.conf",
		"/usr/local/include/rcsc/formation/formation_dt.h",
		"/usr/local/include/rcsc/formation/formation.h",
		"/usr/local/include/rcsc/action/body_pass.h",
		"/home/anuj/Desktop/robocup-share/robocup-share/attack/src/.deps/sample_player-bhv_goalie_basic_move.Po",
		"/home/anuj/Desktop/robocup-share/robocup-share/attack/src/formations-dt/offense-formation.conf",
		"/usr/local/include/rcsc/action/neck_turn_to_player_or_scan.h",
		"/usr/local/include/rcsc/action/body_turn_to_point.h",
		"/usr/local/include/rcsc/player/player_agent.h",
		"/usr/local/include/rcsc/common/audio_memory.h",
		"/usr/local/include/rcsc/common/soccer_agent.h",
		"/usr/local/include/rcsc/monitor/monitor_command.h",
		"/home/anuj/Desktop/robocup-share/robocup-share/attack/src/bhv_basic_move.cpp",
		"/usr/local/include/rcsc/player/player_object.h",
		"/usr/local/include/rcsc/action/basic_actions.h",
		"/usr/local/include/rcsc/common/periodic_callback.h",
		"/home/anuj/Desktop/robocup-share/robocup-share/attack/src/start.sh",
		"/home/anuj/Desktop/robocup-share/robocup-share/attack/src/start.sh.in",
		"/home/anuj/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/anuj/Desktop/robocup-share/robocup-share/attack/src/formations-dt/normal-formation.conf",
		"/home/anuj/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/usr/local/include/rcsc/common/free_message_parser.h",
		"/home/anuj/Desktop/robocup-share/robocup-share/Robocop-Attack-Rowdy_Roosters/sample_player.cpp",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/sample_player.cpp",
		"/usr/local/include/rcsc/action/body_smart_kick.h",
		"/usr/share/applications/sublime_text.desktop",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/chain_action/clear_ball.cpp",
		"/home/anuj/Downloads/Theme/QtCurve-KDE4-1.8.14/README",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/chain_action/bhv_pass_kick_find_receiver.cpp",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/bhv_basic_tackle.cpp",
		"/usr/local/include/rcsc/player/localization.h",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/bhv_basic_move.cpp",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/chain_action/pass.cpp",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/bhv_penalty_kick.cpp",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/bhv_go_to_static_ball.cpp",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/bhv_basic_move.h",
		"/usr/local/include/rcsc/rcg/handler.h",
		"/usr/local/include/rcsc/action/body_dribble.h",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/start.sh",
		"/usr/local/include/rcsc/rcg.h",
		"/usr/local/include/rcsc/rcg/util.h",
		"/usr/local/include/rcsc/factory.h",
		"/usr/local/include/rcsc/geom.h",
		"/home/anuj/Desktop/robocup-share/robocup-share/agent2d-3.1.2/src/chain_action/actgen_direct_pass.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"121",
			"takePass",
			"kickoff",
			"pass().",
			"pass()",
			"sayMessage",
			"passer",
			"runThr",
			"doHear",
			"kickof",
			"kick",
			"dokic",
			"odkic",
			"kickOff",
			"give",
			"addSa",
			"().audioMemory().passTime()",
			"run",
			" const WorldModel & wm = this->world();\n\n    if ( wm.audioMemory().passTime() != wm.time()\n         || wm.audioMemory().pass().empty()\n         || wm.audioMemory().pass().front().receiver_ != wm.self().unum() )\n    {\n        return false;\n    }",
			"doHe",
			"runThrough",
			"doHeard",
			"ball",
			"tro",
			"doIntention",
			"doIntention\n",
			"doIm",
			"count",
			"gameTime",
			"domove",
			"cout<<",
			"dokick",
			"doHeardPassReceive",
			"doINte",
			"intent",
			"runT",
			"give",
			"girve",
			"give",
			"doKic",
			"doHe",
			"runT",
			"give",
			"ball_P",
			"ball_",
			"doK",
			"ball_pos",
			"doKi",
			"M_pass",
			"doKi",
			"runT",
			"cout",
			"doK",
			"ball",
			"Ball",
			"ball(",
			"ball",
			"ball()",
			"selfMe",
			"angle",
			"angg",
			"ang",
			"angleDeg",
			"angle",
			"addSa",
			"tellMe",
			"tellme",
			"addSa",
			"pass(",
			"pass",
			"give",
			"Message",
			"freeMe",
			"free",
			"passMess",
			"pass",
			"cout",
			"count",
			"pass(.",
			"doIN",
			"domo",
			"hold",
			"give",
			"pass",
			"passMess",
			"runTr",
			"domove",
			"domoe",
			"dokick",
			"giveT",
			"pass",
			"give",
			"docheck",
			"doSay",
			"update",
			"updatee",
			"front",
			"receive",
			"addSa",
			"Clear",
			"pass.fron",
			"queuedNextSelfBody",
			"thro",
			"thr",
			"tht",
			"clear",
			"doKeepBall",
			"doKeepBall\n",
			"intention",
			"message",
			"messge",
			"cler",
			"remove",
			"receive",
			"deb",
			"connect",
			"addCircle",
			"debug",
			"queued",
			"self",
			"ClearS",
			"clearAll",
			"effec",
			"command",
			"print",
			"run",
			"PassMessage",
			"run"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"givePass"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/usr/local/include/rcsc/common/audio_memory.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22716,
						"regions":
						{
						},
						"selection":
						[
							[
								11207,
								11207
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6468.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/usr/local/include/rcsc/player/world_model.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48607,
						"regions":
						{
						},
						"selection":
						[
							[
								18130,
								18130
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8617.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "sample_player.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49132,
						"regions":
						{
						},
						"selection":
						[
							[
								3310,
								3310
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1507.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "sample_player.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5177,
						"regions":
						{
						},
						"selection":
						[
							[
								2792,
								2792
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1558.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/usr/local/include/rcsc/player/say_message_builder.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38641,
						"regions":
						{
						},
						"selection":
						[
							[
								21868,
								21868
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16098.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/usr/local/include/rcsc/player/action_effector.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18036,
						"regions":
						{
						},
						"selection":
						[
							[
								11864,
								11864
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5902.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/usr/local/include/rcsc/player/player_agent.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13795,
						"regions":
						{
						},
						"selection":
						[
							[
								10894,
								10894
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6224.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/usr/local/include/rcsc/game_time.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6361,
						"regions":
						{
						},
						"selection":
						[
							[
								1548,
								1548
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 828.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/usr/local/include/rcsc/action/body_smart_kick.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2514,
						"regions":
						{
						},
						"selection":
						[
							[
								1516,
								1516
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 810.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 25.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "Rowday.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 268.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
